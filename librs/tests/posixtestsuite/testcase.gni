import("//build/toolchain/bluekernel.gni")
import("//kernel/common_crate_rustflags.gni")

template("posix_testsuite_case") {
  # format: posixfunc_1_1
  forward_variables_from(invoker, "*")
  case_name = target_name
  exe_name = "librs_posix_image_${case_name}"
  runner_name = "librs_posix_runner_${case_name}"
  checker_name = "run_librs_posix_${case_name}"

  rust_library(exe_name) {
    testonly = true

    # crate_type = "bin"
    deps = [
      "//kernel/librs/tests/posixtestsuite:${case_name}",
      "//kernel/librs/tests/posixtestsuite:librs_for_posix_testsuite",
    ]
    if (coverage || profile) {
      deps += [
        "//external/minicov/v0.3.7:minicov",
        "//external/semihosting/v0.1.20:semihosting",
      ]
    }
    inputs = [ "//kernel/kernel/src/boards/$board/link.x" ]
    rustflags = test_image_rustflags
  }

  gen_qemu_runner(runner_name) {
    testonly = true
    img = ":${exe_name}"
    qemu = "$qemu_exe"
    board = "$board"
  }

  run_qemu_check(checker_name) {
    testonly = true
    runner = ":${runner_name}"
    if (coverage) {
      img = ":${exe_name}"
      checker = "//kernel/kernel/src/cov.rs"
    } else {
      checker = "//kernel/librs/tests/posixtestsuite/common_checker.test"
    }
  }

  source_set(case_name) {
    name_components = string_split(case_name, "_")
    count = 0
    foreach(i, name_components) {
      count += 1
    }
    if (count < 4) {
      error(
          "The test case name should be in the format of x_x_1_1 or x_x_x_1_1")
    }

    # for filename
    file_name =
        name_components[count - 2] + "-" + name_components[count - 1] + ".c"

    # directory name
    count2 = 0
    dir_name = ""
    foreach(cpn, name_components) {
      if (count2 < count - 2) {
        if (count2 == count - 3) {
          dir_name += cpn
        } else {
          dir_name += cpn + "_"
        }
      }
      count2 += 1
    }
    sources = [ "//external/posixtestsuite/conformance/interfaces/${dir_name}/${file_name}" ]

    include_dirs = [
      "//kernel/librs/newlib/include",
      "//kernel/librs/newlib/include/bits",
    ]
    cflags = [
      "-std=gnu99",
      "-D_POSIX_C_SOURCE=200112L",
      "-O2",
      "-Wall",
      "-nostartfiles",
    ]
  }
}

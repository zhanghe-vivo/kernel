# Copyright (c) 2025 vivo Mobile Communication Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/templates/rust.gni")
import("//build/toolchain/blueos.gni")
import("//kernel/common_crate_rustflags.gni")

build_rust("loader_integration_test") {
  testonly = true
  crate_type = "bin"
  edition = "2021"
  sources = [ "src/test.rs" ]
  deps = [
    "//external/semihosting/v0.1.20:semihosting",
    "//kernel/kernel:blueos",
    "//kernel/loader:blueos_loader",
    "//kernel/loader/tests/inputs",
    "//kernel/rsrt:rsrt",
    "//libc:libc",
    "//librs:librs",
  ]
  if (coverage || profile) {
    deps += [
      "//kernel/kernel:atomic",
      "//kernel/loader:common_cov",
    ]
  }
  proc_macro_deps = [ "//kernel/test_harness:blueos_test_macro" ]
  inputs = [ "//kernel/kernel/src/boards/$board/link.x" ]
  rustflags = test_image_rustflags
}

gen_qemu_runner("loader_integration_test_runner") {
  testonly = true
  img = ":loader_integration_test"
  qemu = "$qemu_exe"
  machine = "$machine"
  semihosting = true
  if ("$board" == "qemu_virt64_aarch64") {
    qemu_args =
        "-cpu cortex-a53" + " -smp 4" + " -chardev stdio,id=con,mux=on" +
        " -serial chardev:con" + " -global virtio-mmio.force-legacy=false" +
        " -device virtio-rng-device,bus=virtio-mmio-bus.1" +
        " -mon chardev=con,mode=readline"
    block_img = "test.img"
  } else if ("$board" == "qemu_riscv64") {
    qemu_args = qemu_riscv64_run_args
  }
}

run_qemu_check("run_loader_integration_test") {
  testonly = true
  runner = ":loader_integration_test_runner"
  if (coverage) {
    img = ":loader_integration_test"
    checker = "//kernel/loader/tests/cov/lib.rs"
  } else {
    checker = "src/test.rs"
  }
}

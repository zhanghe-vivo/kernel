# Copyright (c) 2025 vivo Mobile Communication Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

common_crate_rustflags = []

# we use minicov in qemu
if (coverage) {
  common_crate_rustflags += [
    "-Z",
    "no-profiler-runtime",
    "--cfg",
    "coverage",
  ]
}

if (profile) {
  common_crate_rustflags += [
    "-Z",
    "no-profiler-runtime",
    "--cfg",
    "profile",
  ]
}

if (board == "qemu_mps2_an385") {
  common_crate_rustflags += [
    "--cfg",
    "cortex_m",
    "--cfg",
    "armv7m",
  ]
} else if (board == "qemu_mps3_an547") {
  common_crate_rustflags += [
    "--cfg",
    "cortex_m",
    "--cfg",
    "armv8m",
    "--cfg",
    "armv8m_main",
    "--cfg",
    "has_fpu",
  ]
}

common_gcc_rustflags = [
  "-Clink-arg=-nostartfiles",
  "-Clink-arg=-lgcc",
]

common_image_rustflags = [
  "-Cpanic=abort",

  # Have rustc generate stack sizes for analyzing the size of stack frames.
  "-Z",
  "emit-stack-sizes",
  "-Clink-arg=-T" + rebase_path("//kernel/kernel/src/boards/$board/link.x"),
]

if ("$board" == "qemu_riscv64") {
  common_image_rustflags += common_crate_rustflags
} else {
  common_image_rustflags += common_crate_rustflags + common_gcc_rustflags
}

test_image_rustflags = [
  # unstable rust custom test framework
  "--test",
  "-Z",
  "panic-abort-tests",
]
test_image_rustflags += common_image_rustflags

qemu_extra_args = []
qemu_net_args = []
qemu_block_args = []
if ("$board" == "qemu_riscv64") {
  qemu_extra_args += [
    "-bios",
    "none",
    "-smp",
    "32",
  ]
} else if ("$board" == "qemu_virt64_aarch64") {
  qemu_extra_args += [
    "-cpu",
    "cortex-a53",
    "-smp",
    "4",
    "-chardev",
    "stdio,id=con,mux=on",
    "-serial",
    "chardev:con",
    "-global",
    "virtio-mmio.force-legacy=false",
    "-device",
    "virtio-rng-device,bus=virtio-mmio-bus.1",
    "-mon",
    "chardev=con,mode=readline",
  ]
  qemu_net_args += [
    "-netdev",
    "user,id=u1,hostfwd=tcp:127.0.0.1:10024-10.0.2.15:23,hostfwd=tcp:127.0.0.1:15002-10.0.2.15:5001",
    "-device",
    "virtio-net-device,netdev=u1,bus=virtio-mmio-bus.2",
  ]
  qemu_block_args += [
    "-device",
    "virtio-blk-device,bus=virtio-mmio-bus.3,drive=hd",
  ]
}

blueos_default_cfgs = [
  "target_board=\"$board\"",
  "scheduler=\"global\"",
]

# Copyright (c) 2025 vivo Mobile Communication Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/templates/build_template.gni")

bindgen("rtthread_bindgen") {
  bindgen_flags = [
    "--use-core",
    "--ctypes-prefix",
    "core::ffi",
  ]
  sources = [ "include/rtdef.h" ]
  inputs = [ "include/rtconfig.h" ]
  include_dirs = [ "include" ]
  cflags = [
    "--target=$llvm_target",
    "-fshort-enums",
    "-fsigned-char",
    "-nostdlib",
    "-isystem",
    "$sysroot_path",
  ]
}

build_rust("rtthread_header") {
  crate_type = "rlib"
  sources = [ "src/lib.rs" ]
  deps = [ ":rtthread_bindgen" ]
  output_file = get_target_outputs(":rtthread_bindgen")
  rustenv = [ "BINDGEN_DIR=" + rebase_path(output_file[0]) ]
}

static_library("rtthread_rt") {
  sources = [
    "c/kservice.c",
    "c/object.c",
  ]
  include_dirs = [ "include" ]
  if ("$current_toolchain" == "//build/toolchain:blueos_aarch64") {
    cflags = [
      "-nostdinc",
      "-fno-profile-generate",
    ]
  } else {
    cflags = [
      "-nostdlibinc",
      "-fno-profile-instr-generate",
      "-fno-coverage-mapping",
    ]
  }
  cflags += [
    "-fno-stack-protector",
    "-Wno-implicit-function-declaration",
    "-fshort-enums",
    "-fsigned-char",
    "-nostdlib",
    "-isystem",
    "$sysroot_path",
  ]
  defines = [ "__blueos__" ]
}
